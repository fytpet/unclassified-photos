name: Deployment Pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: npm ci
    - name: Run validations
      run: npm run validate
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c
    - name: Set up QEMU
      uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
      with:
        platforms: 'arm'
    - name: Build the Docker image
      run: docker build -t "$DOCKER_REPOSITORY" --platform linux/arm/v7 .
      env:
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker Hub
      run: docker image push "$DOCKER_REPOSITORY"
      env:
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    - name: Setup SSH
      run: |
        set -e
        trap 'echo "Error occurred on line $LINENO"; exit 1' ERR
        mkdir ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/ssh_private_key
        chmod 600 ~/.ssh/ssh_private_key
        ssh-keyscan -t rsa -p $SSH_PORT $SSH_HOSTNAME >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_HOSTNAME: ${{ secrets.SSH_HOSTNAME }}
    - name: Run deploy script over SSH
      run: |
        git pull
        ssh \
          -i ~/.ssh/ssh_private_key \
          -p $SSH_PORT $SSH_USERNAME@$SSH_HOSTNAME \
          "cd ~/unclassified-photos && git pull && ./scripts/deploy.sh"
      env:
        SSH_PORT: ${{ secrets.SSH_PORT }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_HOSTNAME: ${{ secrets.SSH_HOSTNAME }}
    - name: Check Server Health
      run: ./scripts/healthcheck.sh
      env:
        HOSTNAME: ${{ secrets.HOSTNAME }}
